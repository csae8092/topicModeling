{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import re, sys, urllib.request, time\n",
    "import lxml.etree as ET"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "url = 'http://thun-korrespondenz.uibk.ac.at:8080/exist/rest/db/files/thun/xml'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "try:\n",
    "    u = urllib.request.urlopen(url)\n",
    "except:\n",
    "    print('something is wrong with this url')\n",
    "    sys.exit(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "dom = ET.parse(u)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "resource = dom.xpath(\"//exist:resource/@name\",\n",
    "                    namespaces={'exist':\n",
    "                               'http://exist.sourceforge.net/NS/exist'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "for file in resource:\n",
    "    fileUrl = url+\"/\"+file\n",
    "    try:\n",
    "        u = urllib.request.urlopen(fileUrl)\n",
    "    except:\n",
    "        print('something is wrong with this url')\n",
    "        sys.exit(0)\n",
    "    text = u.read().decode(u.headers.get_content_charset())\n",
    "    #print(text)\n",
    "    notePattern = re.compile(r'<note.*?</note>', re.DOTALL)\n",
    "    text = re.sub(notePattern, \"\", text)\n",
    "    pattern = re.compile(r'<.*</index>', re.DOTALL)\n",
    "    text = re.sub(pattern,\" \", text)\n",
    "    pattern = re.compile(r\"<.*?>\", re.DOTALL)\n",
    "    text = re.sub(pattern,\" \", text)\n",
    "    text = text.lower()\n",
    "    #print(text)\n",
    "    fileName = re.sub(r'.xml', \".txt\", file)\n",
    "    output = open(fileName, 'w', encoding=\"utf\")\n",
    "    output.write(text)\n",
    "    output.close()\n",
    "    time.sleep(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.4.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
